name: Production CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build backend image
        run: docker build -t dsatracker-api:latest ./backend

      - name: Build frontend image
        run: docker build -t dsatracker-frontend:latest ./frontend
      
      - name: Write .env for compose
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      - name: Write .env.prod for backend
        run: | 
          echo "PORT=4000" > backend/.env.prod
          echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@database:5432/${{ secrets.POSTGRES_DB }}" >> backend/.env.prod
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> backend/.env.prod  
          echo "JWT_EXPIRES_IN=7d" >> backend/.env.prod

      - name: Start containers
        run: docker compose -f docker-compose.prod.yml up -d

      - name: Wait for backend health
        run: |
          for i in {1..20}; do
            if curl --fail http://localhost:4000/api/health; then
              echo "Backend healthy";
              exit 0;
            else
              sleep 3;
            fi
          done
          echo "Backend not healthy in time"; exit 1


      - name: Wait for frontend health
        run: |
          for i in {1..20}; do
            if curl --fail http://localhost:8080; then
              echo "Frontend healthy";
              exit 0;
            else
              sleep 3;
            fi
          done
          echo "Frontend not healthy in time"; exit 1

      - name: Print backend logs on failure
        if: failure()
        run: docker logs dsatracker-api || true

      - name: Stop containers
        if: always()
        run: docker compose -f docker-compose.prod.yml down -v


        